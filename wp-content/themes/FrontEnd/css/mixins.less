// --------------------------------------------------
// Variables
// --------------------------------------------------
@color-softRed: #222831;
@color-lightViolet: #30475e;
@color-white: #fff;
@color-black: #000;
@color-gray: #e7e6e1;
@color-lightblue: #9ab3f5;
@color-violet: #7579e7;


@primary_font: 'Source Sans Pro';
@scondry_font: 'Kiwi Maru';

// --------------------------------------------------
// width
// --------------------------------------------------
.container(){
   width:100%;
   padding-right:15px;
   padding-left:15px;
   margin-right:auto;
   margin-left:auto;
   @media (min-width: 576px) {
      max-width:540px;
   }
   @media (min-width: 768px) {
      max-width:720px;
   }
   @media (min-width: 992px) {
      max-width:960px;
   }
   @media (min-width: 1200px) {
      max-width:1140px;
   }
}


// --------------------------------------------------
// Flexbox
// --------------------------------------------------

// Flexbox display
// flex or inline-flex
.flex-display(@display: flex) {
	display: ~"-webkit-@{display}";
	display: ~"-ms-@{display}box"; // IE10 uses -ms-flexbox
	display: ~"-ms-@{display}"; // IE11
	display: @display;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
.flex(@columns: initial) {
   -webkit-flex: @columns;
   -ms-flex: @columns;
   flex: @columns;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
   -webkit-flex-direction: @direction;
   -ms-flex-direction: @direction;
   flex-direction: @direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
   -webkit-flex-wrap: @wrap;
   -ms-flex-wrap: @wrap;
   flex-wrap: @wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
   -webkit-flex-flow: @flow;
   -ms-flex-flow: @flow;
   flex-flow: @flow;
}

// Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
   -webkit-order: @order;
   -ms-order: @order;
   order: @order;
}

// Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
   -webkit-flex-grow: @grow;
   -ms-flex-grow: @grow;
   flex-grow: @grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
.flex-shrink(@shrink: 1) {
   -webkit-flex-shrink: @shrink;
   -ms-flex-shrink: @shrink;
   flex-shrink: @shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex items
// <width> 
.flex-basis(@width: auto) {
   -webkit-flex-basis: @width;
   -ms-flex-basis: @width;
   flex-basis: @width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
.justify-content(@justify: flex-start) {
   -webkit-justify-content: @justify;
   -ms-justify-content: @justify;
   justify-content: @justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
.align-content(@align: stretch) {
   -webkit-align-content: @align;
   -ms-align-content: @align;
   align-content: @align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
.align-items(@align: stretch) {
   -webkit-align-items: @align;
   -ms-align-items: @align;
   align-items: @align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
.align-self(@align: auto) {
   -webkit-align-self: @align;
   -ms-align-self: @align;
   align-self: @align;
}

// Mixin 
.border-radius (@radius: 5px) {
   -webkit-border-radius: @radius;
   -moz-border-radius: @radius;
   border-radius: @radius;
}

// Mixin 
.transition (@prop: all, @time: .5s, @ease: linear) {
   -webkit-transition: @prop @time @ease;
   -moz-transition: @prop @time @ease;
   -o-transition: @prop @time @ease;
   -ms-transition: @prop @time @ease;
   transition: @prop @time @ease;
}

// Arrow Mixins
.arrow-base(@size) {
   width: 0;
   height: 0;
   border: @size solid transparent;
}

.arrow-up(@size, @color, @left, @right, @top, @bottom) {
   .arrow-base(@size);
   border-top-style: none;
   border-bottom-color: @color;
   top: @top;
   right: @right;
   bottom: @bottom;
   left: @left;
}

.arrow-down(@size, @color, @left, @right, @top, @bottom) {
   .arrow-base(@size);
   border-bottom-style: none;
   border-top-color: @color;
   top: @top;
   right: @right;
   bottom: @bottom;
   left: @left;
}

.arrow-right(@size, @color, @left, @right, @top, @bottom) {
   .arrow-base(@size);
   border-right-style: none;
   border-left-color: @color;
   top: @top;
   right: @right;
   bottom: @bottom;
   left: @left;
}

.arrow-left(@size, @color, @left, @right, @top, @bottom) {
   .arrow-base(@size);
   border-left-style: none;
   border-right-color: @color;
   top: @top;
   right: @right;
   bottom: @bottom;
   left: @left;
}

.transform(@string){
	-webkit-transform: @string;
	-moz-transform: @string;
	-ms-transform: @string;
   -o-transform: @string;
   transform: @string;
}

.scale (@factor) {
	-webkit-transform: scale(@factor);
	-moz-transform: scale(@factor);
	-ms-transform: scale(@factor);
   -o-transform: scale(@factor);
   transform: scale(@factor);
}

.scaleX (@factor) {
	-webkit-transform: scaleX(@factor);
	-moz-transform: scaleX(@factor);
	-ms-transform: scaleX(@factor);
   -o-transform: scaleX(@factor);
   transform: scaleX(@factor);
}

.rotate (@deg) {
	-webkit-transform: rotate(@deg);
	-moz-transform: rotate(@deg);
	-ms-transform: rotate(@deg);
   -o-transform: rotate(@deg);
   transform: rotate(@deg);
}

.skew (@deg, @deg2) {
	-webkit-transform: skew(@deg, @deg2);
	-moz-transform: skew(@deg, @deg2);
	-ms-transform: skew(@deg, @deg2);
   -o-transform: skew(@deg, @deg2);
   transform: skew(@deg, @deg2);
}

.translate (@x, @y) {
	-webkit-transform: translate(@x, @y);
	-moz-transform: translate(@x, @y);
	-ms-transform: translate(@x, @y);
   -o-transform: translate(@x, @y);
   transform: translate(@x, @y);
}

.translateX (@x) {
	-webkit-transform: translateX(@x);
	-moz-transform: translateX(@x);
	-ms-transform: translateX(@x);
   -o-transform: translateX(@x);
   transform: translateX(@x);
}

.translateY (@y) {
	-webkit-transform: translateY(@y);
	-moz-transform: translateY(@y);
	-ms-transform: translateY(@y);
   -o-transform: translateY(@y);
   transform: translateY(@y);
}

.opacity (@opacity) {
	-webkit-opacity: @opacity;
	-moz-opacity: @opacity;
	opacity: @opacity;
}

.box-sizing (@type: border-box) {
	-webkit-box-sizing: @type;
	-moz-box-sizing: @type;
	box-sizing: @type;
}

.animation (@name, @duration: 300ms, @delay: 0, @ease: ease) {
	-webkit-animation: @name @duration @delay @ease;
	-moz-animation: @name @duration @delay @ease;
	-ms-animation: @name @duration @delay @ease;
}

.transform-origin(@arguments) {
   -webkit-transform-origin: @arguments;
   -moz-transform-origin: @arguments;
   -ms-transform-origin: @arguments;
   -o-transform-origin: @arguments;
   transform-origin: @arguments;
}

// Cubic
@easeInCubic     :  cubic-bezier(0.550, 0.055, 0.675, 0.190);
@easeOutCubic    :  cubic-bezier(0.215, 0.610, 0.355, 1.000);
@easeInOutCubic  :  cubic-bezier(0.645, 0.045, 0.355, 1.000);

// Circ
@easeInCirc      :  cubic-bezier(0.600, 0.040, 0.980, 0.335);
@easeOutCirc     :  cubic-bezier(0.075, 0.820, 0.165, 1.000);
@easeInOutCirc   :  cubic-bezier(0.785, 0.135, 0.150, 0.860);

// Expo
@easeInExpo      :  cubic-bezier(0.950, 0.050, 0.795, 0.035);
@easeOutExpo     :  cubic-bezier(0.190, 1.000, 0.220, 1.000);
@easeInOutExpo   :  cubic-bezier(1.000, 0.000, 0.000, 1.000);

// Quad
@easeInQuad      :  cubic-bezier(0.550, 0.085, 0.680, 0.530);
@easeOutQuad     :  cubic-bezier(0.250, 0.460, 0.450, 0.940);
@easeInOutQuad   :  cubic-bezier(0.455, 0.030, 0.515, 0.955);

// Quart
@easeInQuart     :  cubic-bezier(0.895, 0.030, 0.685, 0.220);
@easeOutQuart    :  cubic-bezier(0.165, 0.840, 0.440, 1.000);
@easeInOutQuart  :  cubic-bezier(0.770, 0.000, 0.175, 1.000);

// Quint
@easeInQuint     :  cubic-bezier(0.755, 0.050, 0.855, 0.060);
@easeOutQuint    :  cubic-bezier(0.230, 1.000, 0.320, 1.000);
@easeInOutQuint  :  cubic-bezier(0.860, 0.000, 0.070, 1.000);

// Sine
@easeInSine      :  cubic-bezier(0.470, 0.000, 0.745, 0.715);
@easeOutSine     :  cubic-bezier(0.390, 0.575, 0.565, 1.000);
@easeInOutSine   :  cubic-bezier(0.445, 0.050, 0.550, 0.950);

// Back
@easeInBack      :  cubic-bezier(0.600, -0.280, 0.735, 0.045);
@easeOutBack     :  cubic-bezier(0.175,  0.885, 0.320, 1.275);
@easeInOutBack   :  cubic-bezier(0.680, -0.550, 0.265, 1.550);